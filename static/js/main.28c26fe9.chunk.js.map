{"version":3,"sources":["components/MainInfo/MainInfo.jsx","components/StatisticsBtns/StatisticsBtns.jsx","components/_pages/MainPage.jsx","components/_share/GoBackHeader/GoBackHeader.jsx","components/_share/LabelInput/LabelInput.jsx","components/_pages/TransactionPage.jsx","components/_pages/BalancePage.jsx","components/App/App.jsx","index.js"],"names":["MainInfo","title","currency","options","handleOpenPage","activePage","map","namePeriod","titlePeriod","sum","onClick","type","StatisticsBtns","MainPage","mainInfoCosts","mainInfoIncomes","mainInfoBalance","GoBackHeader","cbGoBack","LabelInput","name","value","placeholder","cbOnChange","onChange","TransactionPage","state","date","time","category","comment","handleChange","e","target","setState","handleSubmit","preventDefault","props","transType","addTransaction","handleClosePage","transaction","id","shortid","generate","this","onSubmit","Component","BalancePage","App","costs","incomes","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28c26fe9.chunk.js","sourcesContent":["const MainInfo = ({\n  title,\n  currency = \"USD\",\n  options,\n  handleOpenPage,\n  activePage,\n}) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      <p>{currency}</p>\n      <ul>\n        {options.map(({ namePeriod, titlePeriod, sum }) => (\n          <li key={namePeriod}>\n            <span>{titlePeriod}</span>\n            <span>{sum}</span>\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => handleOpenPage(activePage)} type=\"button\">\n        Add\n      </button>\n    </section>\n  );\n};\n\nexport default MainInfo;\n","const StatisticsBtns = () => {\n  return (\n    <>\n      <button type=\"button\">Все расходы</button>\n      <button type=\"button\">Все доходы</button>\n    </>\n  );\n};\n\nexport default StatisticsBtns;\n","import MainInfo from \"../MainInfo/MainInfo\";\nimport StatisticsBtns from \"../StatisticsBtns/StatisticsBtns\";\nimport {\n  mainInfoCosts,\n  mainInfoIncomes,\n  mainInfoBalance,\n} from \"../../assets/data/mainInfoOptions.json\";\n\nconst MainPage = ({ handleOpenPage }) => {\n  return (\n    <section>\n      <h1>Журнал расходов</h1>\n      <MainInfo\n        title={\"Расходы\"}\n        options={mainInfoCosts}\n        activePage=\"costs\"\n        handleOpenPage={handleOpenPage}\n      />\n      <MainInfo\n        title={\"Доходы\"}\n        options={mainInfoIncomes}\n        activePage=\"incomes\"\n        handleOpenPage={handleOpenPage}\n      />\n      <MainInfo\n        title={\"Баланс\"}\n        options={mainInfoBalance}\n        activePage=\"balance\"\n        handleOpenPage={handleOpenPage}\n      />\n      <StatisticsBtns />\n    </section>\n  );\n};\n\nexport default MainPage;\n","const GoBackHeader = ({ title, cbGoBack }) => {\n  return (\n    <header>\n      <button type=\"button\" onClick={cbGoBack}>\n        GoBack\n      </button>\n      <h1>{title}</h1>\n    </header>\n  );\n};\n\nexport default GoBackHeader;\n","const LabelInput = ({\n  title,\n  type = \"text\",\n  name,\n  value,\n  placeholder = null,\n  cbOnChange,\n}) => {\n  return (\n    <label>\n      {title && <p>{title}</p>}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        onChange={cbOnChange}\n        placeholder={placeholder}\n      />\n    </label>\n  );\n};\n\nexport default LabelInput;\n","import { Component } from \"react\";\nimport GoBackHeader from \"../_share/GoBackHeader/GoBackHeader\";\nimport LabelInput from \"../_share/LabelInput/LabelInput\";\nimport shortid from \"shortid\";\n\nclass TransactionPage extends Component {\n  state = {\n    date: \"\",\n    time: \"\",\n    category: \"Еда\",\n    sum: \"\",\n    currency: \"USD\",\n    comment: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { transType, addTransaction, handleClosePage } = this.props;\n    addTransaction({\n      transType,\n      transaction: { ...this.state, id: shortid.generate() },\n    });\n    handleClosePage();\n  };\n\n  render() {\n    const { date, time, currency, category, sum, comment } = this.state;\n    const { handleClosePage, transType } = this.props;\n    return (\n      <section>\n        <GoBackHeader\n          title={transType === \"costs\" ? \"Расход\" : \"Доходы\"}\n          cbGoBack={handleClosePage}\n        />\n        <form onSubmit={this.handleSubmit}>\n          <button type=\"submit\">Ok</button>\n          <LabelInput\n            type=\"date\"\n            title=\"День\"\n            name=\"date\"\n            value={date}\n            cbOnChange={this.handleChange}\n          />\n          <LabelInput\n            type=\"time\"\n            title=\"Время\"\n            name=\"time\"\n            value={time}\n            cbOnChange={this.handleChange}\n          />\n          <LabelInput\n            type=\"button\"\n            title=\"Категория\"\n            name=\"category\"\n            value={category}\n            // cbOnChange={() => {}}\n          />\n          <LabelInput\n            title=\"Сумма\"\n            name=\"sum\"\n            value={sum}\n            placeholder=\"Введите сумму\"\n            cbOnChange={this.handleChange}\n          />\n          <LabelInput\n            type=\"button\"\n            title=\"Валюта\"\n            name=\"currency\"\n            value={currency}\n            // cbOnChange={() => {}}\n          />\n          <LabelInput\n            name=\"comment\"\n            value={comment}\n            placeholder=\"Комментарий\"\n            cbOnChange={this.handleChange}\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default TransactionPage;\n","const BalancePage = () => {\n  return <h1>BalancePage</h1>;\n};\n\nexport default BalancePage;\n","import { Component } from \"react\";\nimport MainPage from \"../_pages/MainPage\";\nimport TransactionPage from \"../_pages/TransactionPage\";\nimport BalancePage from \"../_pages/BalancePage\";\n\nclass App extends Component {\n  state = {\n    activePage: \"\",\n    costs: [],\n    incomes: [],\n  };\n\n  handleOpenPage = (activePage) => {\n    this.setState({ activePage });\n  };\n\n  handleClosePage = () => this.setState({ activePage: \"\" });\n\n  addTransaction = ({ transType, transaction }) => {\n    this.setState((prevState) => ({\n      [transType]: [...prevState[transType], transaction],\n    }));\n  };\n\n  render() {\n    const { activePage } = this.state;\n    switch (activePage) {\n      case \"costs\":\n        return (\n          <TransactionPage\n            transType={activePage}\n            handleClosePage={this.handleClosePage}\n            addTransaction={this.addTransaction}\n          />\n        );\n      case \"incomes\":\n        return (\n          <TransactionPage\n            transType={activePage}\n            handleClosePage={this.handleClosePage}\n            addTransaction={this.addTransaction}\n          />\n        );\n      case \"balance\":\n        return <BalancePage />;\n      default:\n        return <MainPage handleOpenPage={this.handleOpenPage} />;\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}